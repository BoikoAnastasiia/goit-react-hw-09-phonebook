{"version":3,"sources":["redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/store.js","Components/Container/Container.jsx","Components/Navigation.jsx","Components/UserMenu/default-avatar.jpg","Components/UserMenu/UserMenu.jsx","Components/AuthNav.jsx","Components/AppBar/AppBar.jsx","Components/Routes/PrivateRoute.jsx","Components/Routes/PublicRoute.jsx","App.js","index.js","redux/contacts/contacts-actions.js","Components/UserMenu/user-menu.module.css","redux/contacts/contacts-reducer.js","Components/Cliploader.jsx","Components/Container/Container.module.css"],"names":["registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","name","email","user","createReducer","authActions","_","payload","token","setError","error","isAuthenticated","combineReducers","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","post","response","data","console","log","message","logOut","logIn","getCurrentUser","getState","persistedToken","auth","get","getIsAuthenticated","state","getUsername","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducer","persistor","persistStore","Container","children","className","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","Navigation","isLoggedIn","useSelector","authSelectors","to","exact","style","activeStyle","UserMenu","useDispatch","onLogOut","useCallback","authOperations","userMenuWrapper","src","defaultAvatar","alt","width","userMenuAvatar","Button","variant","onClick","AuthNav","AppBar","PrivateRoute","redirectTo","routeProps","PublicRoute","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","this","props","onGetCurrentUser","fallback","path","component","Component","mapDispatchToProps","connect","ReactDOM","render","StrictMode","loading","document","getElementById","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","module","exports","id","number","filter","Cliploader","type","height","timeout"],"mappings":"sOAEMA,EAAkBC,YAAa,wBAC/BC,EAAkBD,YAAa,wBAC/BE,EAAgBF,YAAa,sBAE7BG,EAAeH,YAAa,qBAC5BI,EAAeJ,YAAa,qBAC5BK,EAAaL,YAAa,mBAUjB,GACbD,kBACAE,kBACAC,gBACAI,cAZoBN,YAAa,sBAajCO,cAZoBP,YAAa,sBAajCQ,YAZkBR,YAAa,oBAa/BG,eACAC,eACAC,aACAI,sBAd4BT,YAAa,8BAezCU,sBAd4BV,YAAa,8BAezCW,oBAd0BX,YAAa,6B,cCZnCY,EAAmB,CAAEC,KAAM,KAAMC,MAAO,MAExCC,EAAOC,YAAcJ,GAAD,mBACvBK,EAAYhB,iBAAkB,SAACiB,EAAD,YAAMC,QAAsBJ,QADnC,cAEvBE,EAAYb,cAAe,SAACc,EAAD,YAAMC,QAAsBJ,QAFhC,cAGvBE,EAAYV,eAAgB,kBAAMK,KAHX,cAIvBK,EAAYP,uBAAwB,SAACQ,EAAD,YAAMC,WAJnB,IAOpBC,EAAQJ,YAAc,MAAD,mBACxBC,EAAYhB,iBAAkB,SAACiB,EAAD,YAAMC,QAAsBC,SADlC,cAExBH,EAAYb,cAAe,SAACc,EAAD,YAAMC,QAAsBC,SAF/B,cAGxBH,EAAYV,eAAgB,kBAAM,QAHV,IAMrBc,EAAW,SAACH,EAAD,YAAMC,SACjBG,EAAQN,YAAc,MAAD,mBACxBC,EAAYf,cAAgBmB,GADJ,cAExBJ,EAAYZ,WAAagB,GAFD,cAGxBJ,EAAYT,YAAca,GAHF,cAIxBJ,EAAYN,oBAAsBU,GAJV,IAOrBE,EAAkBP,aAAc,GAAD,mBAClCC,EAAYhB,iBAAkB,kBAAM,KADF,cAElCgB,EAAYb,cAAe,kBAAM,KAFC,cAGlCa,EAAYP,uBAAwB,kBAAM,KAHR,cAIlCO,EAAYf,eAAgB,kBAAM,KAJA,cAKlCe,EAAYZ,YAAa,kBAAM,KALG,cAMlCY,EAAYN,qBAAsB,kBAAM,KANN,cAOlCM,EAAYV,eAAgB,kBAAM,KAPA,IAUtBiB,cAAgB,CAC7BT,OACAK,QACAE,QACAC,oB,0CCtCFE,IAAMC,SAASC,QAAU,wCAEzB,IAAMP,EAAQ,SACRA,GACFK,IAAMC,SAASE,QAAQC,OAAOC,cAA9B,iBAAwDV,IAyF7C,GACbW,SA7Ee,SAAAC,GAAW,8CAAI,WAAMC,GAAN,eAAAC,EAAA,6DAC9BD,EAAShB,EAAYlB,mBADS,kBAIL0B,IAAMU,KAAK,gBAAiBH,GAJvB,OAItBI,EAJsB,OAK5BhB,EAAUgB,EAASC,KAAKjB,OAExBa,EAAShB,EAAYhB,gBAAgBmC,EAASC,OAPlB,gDAS5BC,QAAQC,IAAR,MACAN,EAAShB,EAAYf,cAAc,KAAMsC,UAVb,yDAAJ,uDA8E1BC,OAtCa,yDAAM,WAAMR,GAAN,SAAAC,EAAA,6DACnBD,EAAShB,EAAYX,iBADF,kBAGXmB,IAAMU,KAAK,iBAHA,OAIjBF,EAAShB,EAAYV,iBAJJ,gDAMjB0B,EAAShB,EAAYT,eANJ,yDAAN,uDAuCbkC,MA1DY,SAAAV,GAAW,8CAAI,WAAMC,GAAN,eAAAC,EAAA,6DAC3BD,EAAShB,EAAYd,gBADM,kBAGFsB,IAAMU,KAAK,eAAgBH,GAHzB,OAGnBI,EAHmB,OAIzBhB,EAAUgB,EAASC,KAAKjB,OAExBa,EAAShB,EAAYb,aAAagC,EAASC,OANlB,gDAQzBJ,EAAShB,EAAYZ,WAAW,KAAMmC,UARb,yDAAJ,uDA2DvBG,eArBqB,yDAAM,WAAOV,EAAUW,GAAjB,mBAAAV,EAAA,2DAGvBU,IADaC,EAFU,EAEzBC,KAAQ1B,MAFiB,wDAO3BA,EAAUyB,GACVZ,EAAShB,EAAYR,yBARM,kBAUFgB,IAAMsB,IAAI,kBAVR,OAUnBX,EAVmB,OAWzBH,EAAShB,EAAYP,sBAAsB0B,EAASC,OAX3B,kDAazBJ,EAAShB,EAAYN,oBAAoB,KAAM6B,UAbtB,0DAAN,0DC3ER,GACbQ,mBALyB,SAAAC,GAAK,OAAIA,EAAMH,KAAKvB,iBAM7C2B,YAJkB,SAAAD,GAAK,OAAIA,EAAMH,KAAK/B,KAAKF,Q,qKCavCsC,EAAU,YACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAK1DC,EAAoB,CACxBC,IAAK,OACLC,YACAC,UAAW,CAAC,UAGRC,EAAQC,YAAe,CAC3BC,QAAS,CACPrB,KAAMsB,YAAeP,EAAmBQ,KACxCC,SAAUC,KAEZpB,eAKa,GAAEc,QAAOO,UAFNC,YAAaR,I,wDChChBS,EAHG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,sBAAKC,UAAWC,IAAOH,UAAvB,cAAoCC,EAApC,QCCIE,EAAS,CACbC,KAAM,CACJC,QAAS,eACTC,eAAgB,OAChBC,QAAS,GACTC,WAAY,IACZC,MAAO,WAETC,WAAY,CACVD,MAAO,YAII,SAASE,IACtB,IAAMC,EAAaC,YAAYC,IAAcxC,oBAE7C,OACE,gCACE,cAAC,IAAD,CAASyC,GAAG,IAAIC,OAAK,EAACC,MAAOd,EAAOC,KAAMc,YAAaf,EAAOO,WAA9D,uBAICE,GACC,cAAC,IAAD,CACEG,GAAG,YACHC,OAAK,EACLC,MAAOd,EAAOC,KACdc,YAAaf,EAAOO,WAJtB,yBC3BO,UAA0B,2C,0BCO1B,SAASS,IACtB,IAAM5D,EAAW6D,cACXjF,EAAO0E,YAAYC,IAActC,aAEjC6C,EAAWC,uBAAY,WAC3B/D,EAASgE,IAAexD,YACvB,CAACR,IAEJ,OACE,sBAAK2C,UAAWC,IAAOqB,gBAAvB,UACE,qBACEC,IAAKC,EACLC,IAAKxF,EACLyF,MAAM,KACN1B,UAAWC,IAAO0B,iBAEpB,sBAAM3B,UAAWC,IAAOhE,KAAxB,SAA+BA,IAC/B,cAAC2F,EAAA,EAAD,CAAQC,QAAQ,WAAWtB,MAAM,UAAUuB,QAASX,EAApD,uBCtBN,IAAMlB,EAAS,CACbC,KAAM,CACJC,QAAS,eACTC,eAAgB,OAChBC,QAAS,GACTC,WAAY,IACZC,MAAO,WAETC,WAAY,CACVD,MAAO,YAyBIwB,EArBC,kBACd,gCACE,cAAC,IAAD,CACElB,GAAG,YACHC,OAAK,EACLC,MAAOd,EAAOC,KACdc,YAAaf,EAAOO,WAJtB,sBAQA,cAAC,IAAD,CACEK,GAAG,SACHC,OAAK,EACLC,MAAOd,EAAOC,KACdc,YAAaf,EAAOO,WAJtB,uBCnBW,SAASwB,IACtB,IAAMtB,EAAaC,YAAYC,IAAcxC,oBAC7C,OACE,mCACE,cAACqC,EAAD,IACCC,EAAa,cAACO,EAAD,IAAe,cAAC,EAAD,O,2BCFpB,SAASgB,EAAT,GAKX,IAJFlC,EAIC,EAJDA,SAEAmC,GAEC,EAHDvF,gBAGC,EAFDuF,YACGC,EACF,2DACKzB,EAAaC,YAAYC,IAAcxC,oBAC7C,OACE,cAAC,IAAD,2BAAW+D,GAAX,aACGzB,EAAaX,EAAW,cAAC,IAAD,CAAUc,GAAIqB,OCV9B,SAASE,EAAT,GAKZ,EAJDzF,gBAIE,IAHFuF,EAGC,EAHDA,WACAnC,EAEC,EAFDA,SACGoC,EACF,2DACKzB,EAAaC,YAAYC,IAAcxC,oBAE7C,OACE,cAAC,IAAD,2BAAW+D,GAAX,aACGzB,GAAcyB,EAAWE,WACxB,cAAC,IAAD,CAAUxB,GAAIqB,IAEdnC,K,YCXFuC,EAAWC,gBAAK,kBAAM,iCACtBC,EAAeD,gBAAK,kBAAM,iCAC1BE,EAAYF,gBAAK,kBAAM,iCACvBG,EAAeH,gBAAK,kBAAM,iCAE1BI,E,uKACJ,WACEC,KAAKC,MAAMC,qB,oBAGb,WACE,OACE,eAAC,EAAD,WACE,cAACd,EAAD,IACA,cAAC,WAAD,CAAUe,SAAU,cAAC,IAAD,IAApB,SACE,eAAC,IAAD,WACE,cAACX,EAAD,CAAatB,OAAK,EAACkC,KAAK,IAAIC,UAAWX,IACvC,cAACF,EAAD,CACEY,KAAK,YACLC,UAAWT,EACXH,YAAU,EACVH,WAAW,cAEb,cAACE,EAAD,CACEY,KAAK,SACLX,YAAU,EACVY,UAAWR,EACXP,WAAW,cAEb,cAACD,EAAD,CACEe,KAAK,YACLC,UAAWP,EACXR,WAAW,uB,GA3BPgB,aAoCZC,EAAqB,CACzBL,iBAAkBzB,IAAetD,gBAGpBqF,cAAQ,KAAMD,EAAdC,CAAkCT,GC9CjDU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUlE,MAAOA,EAAMA,MAAvB,SACE,cAAC,IAAD,CAAamE,QAAS,KAAM5D,UAAWP,EAAMO,UAA7C,SACE,cAAC,IAAD,UACE,cAAC,EAAD,YAKR6D,SAASC,eAAe,U,gCCnB1B,+VAGaC,EAAuBvI,YAClC,iCAEWwI,EAAuBxI,YAClC,iCAEWyI,EAAqBzI,YAAa,+BAElC0I,EAAoB1I,YAAa,8BACjC2I,EAAoB3I,YAAa,8BACjC4I,EAAkB5I,YAAa,4BAE/B6I,EAAuB7I,YAClC,iCAEW8I,EAAuB9I,YAClC,iCAEW+I,EAAqB/I,YAAa,+BAElCgJ,EAAehJ,YAAa,0B,mBCtBzCiJ,EAAOC,QAAU,CAAC,eAAiB,kCAAkC,gBAAkB,mCAAmC,KAAO,0B,6ECqB3H5E,EAAWtD,YAPO,CACtB,CAAEmI,GAAI,OAAQtI,KAAM,gBAAiBuI,OAAQ,aAC7C,CAAED,GAAI,OAAQtI,KAAM,iBAAkBuI,OAAQ,aAC9C,CAAED,GAAI,OAAQtI,KAAM,gBAAiBuI,OAAQ,aAC7C,CAAED,GAAI,OAAQtI,KAAM,iBAAkBuI,OAAQ,eAGlB,mBAC3BZ,KAAuB,SAACtH,EAAD,YAAMC,WADF,cAE3BwH,KAAoB,SAAC1F,EAAD,OAAU9B,EAAV,EAAUA,QAAV,4BAA4B8B,GAA5B,CAAmC9B,OAF5B,cAG3B2H,KAAuB,SAAC7F,EAAD,OAAU9B,EAAV,EAAUA,QAAV,OACtB8B,EAAMoG,QAAO,qBAAGF,KAAgBhI,QAJN,IAOxBkI,EAASrI,YAAc,GAAD,eACzBgI,KAAe,SAAC9H,EAAD,YAAMC,YAGlBiH,EAAUpH,aAAc,GAAD,mBAC1BuH,KAAuB,kBAAM,KADH,cAE1BC,KAAuB,kBAAM,KAFH,cAG1BC,KAAqB,kBAAM,KAHD,cAI1BC,KAAoB,kBAAM,KAJA,cAK1BC,KAAoB,kBAAM,KALA,cAM1BC,KAAkB,kBAAM,KANE,cAO1BC,KAAuB,kBAAM,KAPH,cAQ1BC,KAAuB,kBAAM,KARH,cAS1BC,KAAqB,kBAAM,KATD,IAYdvH,gBAAgB,CAC7B8C,WACA+E,SACAjB,a,gCChDF,uEAGe,SAASkB,IACtB,OACE,cAAC,IAAD,CACEC,KAAK,OACLpE,MAAM,UACNqE,OAAQ,GACRlD,MAAO,GACPmD,QAAS,Q,mBCTfR,EAAOC,QAAU,CAAC,UAAY,+B","file":"static/js/main.8bcab6d1.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nexport default {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport authActions from './auth-actions';\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\nconst error = createReducer(null, {\n  [authActions.registerError]: setError,\n  [authActions.loginError]: setError,\n  [authActions.logoutError]: setError,\n  [authActions.getCurrentUserError]: setError,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [authActions.registerSuccess]: () => true,\n  [authActions.loginSuccess]: () => true,\n  [authActions.getCurrentUserSuccess]: () => true,\n  [authActions.registerError]: () => false,\n  [authActions.loginError]: () => false,\n  [authActions.getCurrentUserError]: () => false,\n  [authActions.logoutSuccess]: () => false,\n});\n\nexport default combineReducers({\n  user,\n  token,\n  error,\n  isAuthenticated,\n});\n","import axios from 'axios';\nimport authActions from './auth-actions';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\n/*\n * POST @ /users/signup\n * body { name, email, password }\n *\n * After successful registration we add a token to HTTP-header\n */\nconst register = credentials => async dispatch => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const response = await axios.post('/users/signup', credentials);\n    token.set(response.data.token);\n\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    console.log(error);\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\n/*\n * POST @ /users/login\n * body:\n *    { email, password }\n *\n * After successful login we add a token to HTTP-header\n */\nconst logIn = credentials => async dispatch => {\n  dispatch(authActions.loginRequest());\n  try {\n    const response = await axios.post('/users/login', credentials);\n    token.set(response.data.token);\n\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\n/*\n * POST @ /users/logout\n * headers:\n *    Authorization: Bearer token\n *\n * After successful logout we delete a token from HTTP-header\n */\nconst logOut = () => async dispatch => {\n  dispatch(authActions.logoutRequest());\n  try {\n    await axios.post('/users/logout');\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError());\n  }\n};\n\n/*\n * GET @ /users/current\n * headers:\n *    Authorization: Bearer token\n *\n * 1. Take a token from the state through getState()\n * 2. If the token doesn't exist we exit not doing any of the operations\n * 3. If token exists we add it to its HTTP-header and run the operation\n */\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n  if (!persistedToken) {\n    return;\n  }\n  token.set(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n  try {\n    const response = await axios.get('/users/current');\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n\nexport default {\n  register,\n  logOut,\n  logIn,\n  getCurrentUser,\n};\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\n\nconst getUsername = state => state.auth.user.name;\n\nexport default {\n  getIsAuthenticated,\n  getUsername,\n};\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { authReducer } from './auth';\r\nimport contactsReducer from '../redux/contacts/contacts-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.Container}> {children} </div>\r\n);\r\nexport default Container;\r\n","import { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { authSelectors } from '../redux/auth';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#018383',\n  },\n};\n\nexport default function Navigation() {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n    <nav>\n      <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\n        Home page\n      </NavLink>\n\n      {isLoggedIn && (\n        <NavLink\n          to=\"/contacts\"\n          exact\n          style={styles.link}\n          activeStyle={styles.activeLink}\n        >\n          Contacts\n        </NavLink>\n      )}\n    </nav>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/default-avatar.ec148682.jpg\";","import { useSelector, useDispatch } from 'react-redux';\nimport { useCallback } from 'react';\nimport { authSelectors, authOperations } from '../../redux/auth';\nimport defaultAvatar from './default-avatar.jpg';\nimport Button from '@material-ui/core/Button';\nimport styles from './user-menu.module.css';\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUsername);\n\n  const onLogOut = useCallback(() => {\n    dispatch(authOperations.logOut());\n  }, [dispatch]);\n\n  return (\n    <div className={styles.userMenuWrapper}>\n      <img\n        src={defaultAvatar}\n        alt={name}\n        width=\"32\"\n        className={styles.userMenuAvatar}\n      />\n      <span className={styles.name}>{name}</span>\n      <Button variant=\"outlined\" color=\"inherit\" onClick={onLogOut}>\n        Logout\n      </Button>\n    </div>\n  );\n}\n","import { NavLink } from 'react-router-dom';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nconst AuthNav = () => (\n  <div>\n    <NavLink\n      to=\"/register\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Register\n    </NavLink>\n    <NavLink\n      to=\"/login\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Login\n    </NavLink>\n  </div>\n);\n\nexport default AuthNav;\n","import { useSelector } from 'react-redux';\nimport Navigation from '../Navigation';\nimport UserMenu from '../UserMenu';\nimport AuthNav from '../AuthNav';\nimport { authSelectors } from '../../redux/auth';\n\nexport default function AppBar() {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n  return (\n    <header>\n      <Navigation />\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n}\n","import { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\n/**\r\n * If a route is privite and a user is logged, render a component\r\n * Otherwise it renders Redirect to /login\r\n */\r\n\r\nexport default function PrivateRoute({\r\n  children,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}\r\n","import { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\n/**\r\n * If a route is restricted and a user is logged it renders redirect to /contacts\r\n * - Otherwise it renders a component\r\n */\r\nexport default function PublicRoute({\r\n  isAuthenticated,\r\n  redirectTo,\r\n  children,\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\r\n\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        children\r\n      )}\r\n    </Route>\r\n  );\r\n}\r\n","import Container from './Components/Container';\r\nimport { Component, Suspense, lazy } from 'react';\r\nimport AppBar from './Components/AppBar/AppBar';\r\nimport PrivateRoute from './Components/Routes/PrivateRoute';\r\nimport PublicRoute from './Components/Routes/PublicRoute';\r\nimport { authOperations } from './redux/auth';\r\nimport { connect } from 'react-redux';\r\nimport { Switch } from 'react-router-dom';\r\nimport ClipLoader from './Components/Cliploader';\r\n\r\nconst HomeView = lazy(() => import('./views/HomeView'));\r\nconst RegisterView = lazy(() => import('./views/RegisterView'));\r\nconst LoginView = lazy(() => import('./views/LoginView'));\r\nconst ContactsView = lazy(() => import('./views/ContactsView'));\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onGetCurrentUser();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <AppBar />\r\n        <Suspense fallback={<ClipLoader />}>\r\n          <Switch>\r\n            <PublicRoute exact path=\"/\" component={HomeView} />\r\n            <PublicRoute\r\n              path=\"/register\"\r\n              component={RegisterView}\r\n              restricted\r\n              redirectTo=\"/contacts\"\r\n            />\r\n            <PublicRoute\r\n              path=\"/login\"\r\n              restricted\r\n              component={LoginView}\r\n              redirectTo=\"/contacts\"\r\n            />\r\n            <PrivateRoute\r\n              path=\"/contacts\"\r\n              component={ContactsView}\r\n              redirectTo=\"/login\"\r\n            />\r\n          </Switch>\r\n        </Suspense>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onGetCurrentUser: authOperations.getCurrentUser,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport store from './redux/store';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userMenuAvatar\":\"user-menu_userMenuAvatar__2zRn8\",\"userMenuWrapper\":\"user-menu_userMenuWrapper__20zpl\",\"name\":\"user-menu_name__uQL2P\"};","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  changeFilter,\r\n  deleteContactRequest,\r\n  deleteContactError,\r\n  deleteContactSuccess,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from './contacts-actions';\r\n\r\nconst initialContacts = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nconst contacts = createReducer(initialContacts, {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n  loading,\r\n});\r\n","import Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nexport default function Cliploader() {\r\n  return (\r\n    <Loader\r\n      type=\"Bars\"\r\n      color=\"#074b79\"\r\n      height={20}\r\n      width={50}\r\n      timeout={3000} //3 secs\r\n    />\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__1TmgU\"};"],"sourceRoot":""}